name: Deploy Static Content to Pages

on:
  # Runs on pushes to the default branch
  push:
    branches: ["main"]
  
  # Allows you to trigger the workflow manually
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Concurrent deployments and preventing queued runs
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Hugo (if using Hugo)
        if: ${{ contains(github.ref, 'hugo') }}
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.128.0/hugo_extended_0.128.0_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'  # Specify the output directory of your site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Optional: Deploy to external services like Surge
      - name: Install Surge (Optional)
        run: npm install --global surge
      
      - name: Deploy to Surge (Optional)
        run: |
          surge ./public --project ${{ secrets.SURGE_PROJECT_URL }} --domain my-custom-domain.surge.sh

# You can also handle deployments for other services (Netlify, Vercel, etc.) using similar steps.
